{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport { server } from \"../server\";\nconst apiUrl = \"http://tpi.uneed.ir:7100/post/search\";\nvar myHeaders = new Headers();\nmyHeaders.append(\"t\", \"WFT9KbF8mCoP6cKFWCmfqvs/pU9TUR8IRLOqMgOFpNE=\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\nvar raw = JSON.stringify({\n  lm: \"10\",\n  pg: \"1\",\n  tp: \"1\"\n});\n\nasync function getApi() {\n  const response = await fetch(apiUrl, {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  });\n  const result_1 = await response.text();\n  return JSON.parse(result_1);\n}\n\nfunction* fetchNews() {\n  try {\n    const products = yield call(getApi);\n    yield put({\n      type: \"PRODUCTS_RECEIVED\",\n      product: products\n    });\n  } catch (e) {\n    yield put({\n      type: \"GET_USERS_FAILED\",\n      message: e.message\n    });\n  }\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(\"GET_NEWS\", fetchNews);\n}\n\nexport default function* rootSaga() {\n  yield all([actionWatcher()]);\n}","map":{"version":3,"sources":["D:/developer/front end/redux/project/arsh/client/src/sagas/index.js"],"names":["put","takeLatest","all","call","server","apiUrl","myHeaders","Headers","append","raw","JSON","stringify","lm","pg","tp","getApi","response","fetch","method","headers","body","redirect","result_1","text","parse","fetchNews","products","type","product","e","message","actionWatcher","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,MAAMC,MAAM,GAAG,sCAAf;AACA,IAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,SAAS,CAACE,MAAV,CAAiB,GAAjB,EAAsB,8CAAtB;AACAF,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AACvBC,EAAAA,EAAE,EAAE,IADmB;AAEvBC,EAAAA,EAAE,EAAE,GAFmB;AAGvBC,EAAAA,EAAE,EAAE;AAHmB,CAAf,CAAV;;AAMA,eAAeC,MAAf,GAAwB;AACtB,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,MAAD,EAAS;AACnCa,IAAAA,MAAM,EAAE,MAD2B;AAEnCC,IAAAA,OAAO,EAAEb,SAF0B;AAGnCc,IAAAA,IAAI,EAAEX,GAH6B;AAInCY,IAAAA,QAAQ,EAAE;AAJyB,GAAT,CAA5B;AAMA,QAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAvB;AACA,SAAOb,IAAI,CAACc,KAAL,CAAWF,QAAX,CAAP;AACD;;AAED,UAAUG,SAAV,GAAsB;AACpB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMvB,IAAI,CAACY,MAAD,CAA3B;AACA,UAAMf,GAAG,CAAC;AAAE2B,MAAAA,IAAI,EAAE,mBAAR;AAA6BC,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAT;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACV,UAAM7B,GAAG,CAAC;AAAE2B,MAAAA,IAAI,EAAE,kBAAR;AAA4BG,MAAAA,OAAO,EAAED,CAAC,CAACC;AAAvC,KAAD,CAAT;AACD;AACF;;AAED,UAAUC,aAAV,GAA0B;AACxB,QAAM9B,UAAU,CAAC,UAAD,EAAawB,SAAb,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAM9B,GAAG,CAAC,CAAC6B,aAAa,EAAd,CAAD,CAAT;AACD","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\nimport { server } from \"../server\";\r\n\r\nconst apiUrl = \"http://tpi.uneed.ir:7100/post/search\";\r\nvar myHeaders = new Headers();\r\nmyHeaders.append(\"t\", \"WFT9KbF8mCoP6cKFWCmfqvs/pU9TUR8IRLOqMgOFpNE=\");\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nvar raw = JSON.stringify({\r\n  lm: \"10\",\r\n  pg: \"1\",\r\n  tp: \"1\",\r\n});\r\n\r\nasync function getApi() {\r\n  const response = await fetch(apiUrl, {\r\n    method: \"POST\",\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: \"follow\",\r\n  });\r\n  const result_1 = await response.text();\r\n  return JSON.parse(result_1);\r\n}\r\n\r\nfunction* fetchNews() {\r\n  try {\r\n    const products = yield call(getApi);\r\n    yield put({ type: \"PRODUCTS_RECEIVED\", product: products });\r\n  } catch (e) {\r\n    yield put({ type: \"GET_USERS_FAILED\", message: e.message });\r\n  }\r\n}\r\n\r\nfunction* actionWatcher() {\r\n  yield takeLatest(\"GET_NEWS\", fetchNews);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([actionWatcher()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}